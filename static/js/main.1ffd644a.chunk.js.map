{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpenseList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","NewExpense","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpense","preState","ReactDOM","render","document","getElementById"],"mappings":"4XAOeA,EALF,SAACC,GACV,IAAMC,EAAU,QAAUD,EAAME,UAChC,OAAO,qBAAKA,UAAWD,EAAhB,SAA0BD,EAAMG,YCqB5BC,G,YArBO,SAACJ,GAKnB,OACI,qBAAKE,UAAU,kBAAf,SACI,sBAAKA,UAAU,2BAAf,UACI,mDACA,yBAAQG,MAAOL,EAAMM,SAAUC,SARb,SAACC,GAC3BR,EAAMS,eAAeD,EAAME,OAAOL,QAO1B,UACI,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,4B,MCALM,MAff,SAAqBX,GACjB,IAAMY,EAAQZ,EAAMa,KAAKC,eAAe,QAAS,CAAEF,MAAO,SACpDG,EAAMf,EAAMa,KAAKC,eAAe,QAAS,CAAEC,IAAM,YACjDC,EAAOhB,EAAMa,KAAKI,cAExB,OACI,sBAAKf,UAAU,eAAf,UACI,qBAAKA,UAAU,sBAAf,SAAsCU,IACtC,qBAAKV,UAAU,qBAAf,SAAqCc,IACrC,qBAAKd,UAAU,oBAAf,SAAoCa,QCSjCG,G,MAfK,SAAClB,GAEjB,OACE,6BACF,eAAC,EAAD,CAAME,UAAU,eAAhB,UACE,cAAC,EAAD,CAAaW,KAAMb,EAAMa,OACzB,sBAAKX,UAAU,4BAAf,UACE,6BAAKF,EAAMmB,QACX,qBAAKjB,UAAU,sBAAf,SAAsCF,EAAMoB,mBCWrCC,G,MAnBM,SAAArB,GACjB,OAA0B,IAAvBA,EAAMsB,MAAMC,OACJ,oBAAIrB,UAAU,0BAAd,gCAIP,oBAAIA,UAAU,gBAAd,SACCF,EAAMsB,MAAME,KAAI,SAAAC,GAAO,OACpB,cAAC,EAAD,CAEAN,MAAOM,EAAQN,MACfC,OAAQK,EAAQL,OAChBP,KAAMY,EAAQZ,MAHTY,EAAQC,W,OCQVC,G,MAlBE,SAAC3B,GACd,IAAI4B,EAAgB,KAMpB,OAJG5B,EAAM6B,SAAW,IAChBD,EAAgBE,KAAKC,MAAO/B,EAAMK,MAAQL,EAAM6B,SAAY,KAAO,KAGhE,sBAAK3B,UAAU,YAAf,UACH,qBAAKA,UAAU,mBAAf,SACI,qBACAA,UAAU,kBACV8B,MAAO,CAACC,OAAQL,OAGpB,qBAAK1B,UAAU,mBAAf,SAAmCF,EAAMkC,aCIlCC,G,MAjBD,SAACnC,GACX,IAAMoC,EAAkBpC,EAAMqC,WAAWb,KAAI,SAAAc,GAAS,OAAIA,EAAUjC,SAC9DkC,EAAeT,KAAKU,IAAL,MAAAV,KAAI,YAAQM,IACjC,OACI,qBAAKlC,UAAU,QAAf,SACKF,EAAMqC,WAAWb,KAAI,SAACc,GAAD,OAClB,cAAC,EAAD,CAEEjC,MAAOiC,EAAUjC,MACjBwB,SAAUU,EACVL,MAAOI,EAAUJ,OAHZI,EAAUJ,cCgBlBO,EAxBO,SAACzC,GACrB,IAD+B,EACzB0C,EAAkB,CACtB,CAAER,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,IAbM,cAgBTL,EAAM2C,UAhBG,IAgB/B,2BAAsC,CAAC,IAA5BlB,EAA2B,QAEpCiB,EADqBjB,EAAQZ,KAAK+B,YACJvC,OAASoB,EAAQL,QAlBlB,8BAqB/B,OAAO,cAAC,EAAD,CAAOiB,WAAYK,KCQbG,EA1BE,SAAC7C,GACd,MAAwC8C,mBAAS,QAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAMMC,EAAmBjD,EAAMsB,MAAM4B,QAAO,SAAAzB,GACxC,OAAOA,EAAQZ,KAAKI,cAAckC,aAAeJ,KAKrD,OACI,8BACA,eAAC,EAAD,CAAM7C,UAAU,WAAhB,UACA,cAAC,EAAD,CAAeI,SAAUyC,EAActC,eAbf,SAAC2C,GACzBJ,EAAgBI,MAahB,cAAC,EAAD,CAAeT,SAAUM,IACzB,cAAC,EAAD,CAAa3B,MAAO2B,U,OCuEbI,G,MA7FK,SAACrD,GAEjB,MAAwC8C,mBAAS,IAAjD,mBAAOQ,EAAP,KAAqBC,EAArB,KACA,EAA0CT,mBAAS,IAAnD,mBAAOU,EAAP,KAAsBC,EAAtB,KACA,EAAsCX,mBAAS,IAA/C,mBAAOY,EAAP,KAAoBC,EAApB,KAiEA,OACI,uBAAMC,SAhBY,SAACpD,GACnBA,EAAMqD,iBAEN,IAAMC,EAAc,CAChB3C,MAAOmC,EACPlC,OAAQoC,EACR3C,KAAM,IAAIkD,KAAKL,IAGnB1D,EAAMgE,kBAAkBF,GACxBP,EAAgB,IAChBE,EAAiB,IACjBE,EAAe,KAIf,UACI,sBAAKzD,UAAU,wBAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,0CACA,uBAAO+D,KAAK,OAAO5D,MAAOiD,EAAc/C,SA9D7B,SAACC,GAExB+C,EAAgB/C,EAAME,OAAOL,aA8DrB,sBAAKH,UAAU,uBAAf,UACI,2CACA,uBAAO+D,KAAK,SAASC,IAAI,OAAOC,KAAK,OAAO9D,MAAOmD,EAAejD,SApDtD,SAACC,GAEzBiD,EAAiBjD,EAAME,OAAOL,aAoDtB,sBAAKH,UAAU,uBAAf,UACI,yCACA,uBAAO+D,KAAK,OAAOC,IAAI,aAAa1B,IAAI,aAAanC,MAAOqD,EAAanD,SA1C/D,SAACC,GAEvBmD,EAAenD,EAAME,OAAOL,gBA2CxB,qBAAKH,UAAU,uBAAf,SACI,wBAAQ+D,KAAK,SAAb,gCClEDG,G,MAnBI,SAACpE,GAWhB,OACI,qBAAKE,UAAU,cAAf,SACI,cAAC,EAAD,CAAa8D,kBAZU,SAACK,GAC5B,IAAMP,EAAW,2BACVO,GADU,IAEb3C,GAAII,KAAKwC,SAASnB,aAGtBnD,EAAMuE,aAAaT,UCPrBU,EAAiB,CACrB,CACE9C,GAAI,KACJP,MAAO,SACPC,OAAQ,GACRP,KAAM,IAAIkD,KAAK,KAAM,EAAG,KAE1B,CACErC,GAAI,KACJP,MAAO,SACPC,OAAQ,GACRP,KAAM,IAAIkD,KAAK,KAAM,EAAG,KAE1B,CACErC,GAAI,KACJP,MAAO,SACPC,OAAQ,GACRP,KAAM,IAAIkD,KAAK,KAAM,EAAG,MAuBbU,EAlBH,WAEV,MAA+B3B,mBAAS0B,GAAxC,mBAAO7B,EAAP,KAAiB+B,EAAjB,KAQA,OACE,gCACA,cAAC,EAAD,CAAYH,aARY,SAAC9C,GACzBiD,GAAW,SAAAC,GACT,MAAM,CAAElD,GAAR,mBAAoBkD,UAOtB,cAAC,EAAD,CAAUrD,MAAOqB,QClCrBiC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.1ffd644a.chunk.js","sourcesContent":["import \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n    const classes = 'card ' + props.className;\r\n    return <div className={classes}>{props.children}</div> //props.children -> used to wrap the data\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpenseFilter = (props) => {\r\n    const dropdownChangeHandler = (event) => {\r\n        props.onChangeFilter(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"expenses-filter\">\r\n            <div className=\"expenses-filter__control\">\r\n                <label>Filter By Year</label>\r\n                <select value={props.selected} onChange={dropdownChangeHandler}>\r\n                    <option value=\"2022\">2022</option>\r\n                    <option value=\"2021\">2021</option>\r\n                    <option value=\"2020\">2020</option>\r\n                    <option value=\"2019\">2019</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default ExpenseFilter;","import './ExpenseDate.css';\r\n\r\nfunction ExpenseDate(props){\r\n    const month = props.date.toLocaleString('en-US', { month: 'long'});\r\n    const day = props.date.toLocaleString('en-US', { day : '2-digit'});\r\n    const year = props.date.getFullYear();\r\n\r\n    return (\r\n        <div className=\"expense-date\">\r\n            <div className=\"expense-date__month\">{month}</div>\r\n            <div className=\"expense-date__year\">{year}</div>\r\n            <div className=\"expense-date__day\">{day}</div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ExpenseDate;","import React from \"react\";\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport \"./ExpenseItem.css\";\r\n\r\nconst ExpenseItem = (props) => {\r\n\r\n    return (\r\n      <li>\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date}/>\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">{props.amount}</div>\r\n      </div>\r\n    </Card>\r\n    </li>\r\n    );\r\n}\r\n\r\nexport default ExpenseItem;","import React from \"react\";\r\n\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpenseList.css\";\r\n\r\nconst ExpensesList = props => {\r\n    if(props.items.length === 0) {\r\n        return <h2 className='expenses-list__fallback'>Found no expenses.</h2>\r\n    }\r\n\r\n    return (\r\n        <ul className=\"expenses-list\">\r\n        {props.items.map(expense => (\r\n            <ExpenseItem \r\n            key={expense.id}\r\n            title={expense.title} \r\n            amount={expense.amount} \r\n            date={expense.date}\r\n            />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default ExpensesList;","import React from \"react\";\r\n\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n    let barFillHeight = '0%';\r\n\r\n    if(props.maxValue > 0) {\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n    }\r\n\r\n    return <div className=\"chart-bar\">\r\n        <div className=\"chart-bar__inner\">\r\n            <div \r\n            className=\"chart-bar__fill\" \r\n            style={{height: barFillHeight}}  >\r\n            </div>\r\n        </div>\r\n        <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n}\r\n\r\nexport default ChartBar;","import React from \"react\";\r\n\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n    return (\r\n        <div className=\"chart\">\r\n            {props.dataPoints.map((dataPoint) => (\r\n                <ChartBar\r\n                  key={dataPoint.label}\r\n                  value={dataPoint.value}\r\n                  maxValue={totalMaximum}\r\n                  label={dataPoint.label}\r\n                  />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chart;","import React from 'react';\r\n\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;","import React, {useState} from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./Expenses.css\";\r\nimport ExpenseFilter from \"./ExpensesFilter\";\r\nimport ExpenseList from \"./ExpenseList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nconst Expenses = (props) => {\r\n    const [filteredYear, setFilteredYear] = useState('2020');\r\n\r\n    const filterChangeHandler = (selectedYear) => {\r\n        setFilteredYear(selectedYear);\r\n    }\r\n\r\n    const filteredExpenses = props.items.filter(expense => {\r\n        return expense.date.getFullYear().toString() === filteredYear;\r\n    });\r\n\r\n    \r\n\r\n    return(\r\n        <div>\r\n        <Card className=\"expenses\">\r\n        <ExpenseFilter selected={filteredYear} onChangeFilter={filterChangeHandler}/>\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpenseList items={filteredExpenses}/>\r\n        \r\n        </Card>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Expenses;","import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n\r\n    const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n    const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n    const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n    //const [userInput, setUserInput] = useState({\r\n    //    enteredTitle: \"\",\r\n    //    enteredAmount: \"\",\r\n    //    enteredDate: \"\"\r\n    //});\r\n\r\n    const titleChangeHandler = (event) => {\r\n\r\n        setEnteredTitle(event.target.value);\r\n\r\n       // setUserInput({\r\n       //     ...userInput,                    //enteredTitle will update but the other two will lost so that's why use spread operator\r\n       //     enteredTitle: event.target.value\r\n       // })\r\n\r\n       //setUserInput((prevState) => {                                 //Correct Way\r\n       //    return {...prevState, enteredTitle: event.target.value}\r\n       //});\r\n    }\r\n\r\n    const amountChangeHandler = (event) => {\r\n\r\n        setEnteredAmount(event.target.value);\r\n\r\n        //setUserInput({\r\n        //    ...userInput,\r\n        //    enteredAmount: event.target.value\r\n        //})\r\n\r\n        //setUserInput((prevState) => {                                 //Correct Way\r\n        //    return {...prevState, enteredTitle: event.target.value}\r\n        //});\r\n    }\r\n\r\n    const dateChangeHandler = (event) => {\r\n\r\n        setEnteredDate(event.target.value);\r\n\r\n        //setUserInput({\r\n        //    ...userInput,\r\n        //    enteredDate: event.target.value\r\n        //})\r\n\r\n        //setUserInput((prevState) => {                                 //Correct Way\r\n        //    return {...prevState, enteredTitle: event.target.value}\r\n        //});\r\n    }\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: enteredAmount,\r\n            date: new Date(enteredDate)\r\n        }\r\n\r\n        props.onSaveExpenseData(expenseData);\r\n        setEnteredTitle(\"\");\r\n        setEnteredAmount(\"\");\r\n        setEnteredDate(\"\");\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>Title</label>\r\n                    <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler}/>\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Amount</label>\r\n                    <input type=\"number\" min=\"0.01\" step=\"0.01\" value={enteredAmount} onChange={amountChangeHandler} />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Date</label>\r\n                    <input type=\"date\" min=\"2019-01-01\" max=\"2022-12-31\" value={enteredDate} onChange={dateChangeHandler} />\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button type=\"submit\">Add Expense</button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nexport default ExpenseForm;","import React from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n    const saveExpenseDataHandler = (enteredExpenseData) => {\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString()\r\n        };\r\n\r\n        props.onAddExpense(expenseData);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"new-expense\">\r\n            <ExpenseForm onSaveExpenseData={saveExpenseDataHandler}/>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default NewExpense;","import React,{useState} from \"react\";\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Book 1',\n    amount: 12,\n    date: new Date(2019, 2, 12)\n  },\n  {\n    id: 'e2',\n    title: 'Book 2',\n    amount: 13,\n    date: new Date(2020, 3, 13)\n  },\n  {\n    id: 'e3',\n    title: 'Book 3',\n    amount: 14,\n    date: new Date(2021, 4, 14)\n  },\n  \n];\n\nconst App = () => {\n\n  const [expenses, setExpense] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpense(preState => {\n      return [expense, ...preState];\n    });\n  };\n\n  return (\n    <div>\n    <NewExpense onAddExpense={addExpenseHandler}/>\n    <Expenses items={expenses}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}